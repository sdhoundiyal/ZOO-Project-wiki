
=== ZOO-Project OSGeo Code Sprint 218 Plan ===

This page can be used to list ideas for the upcoming Bonn code sprint (see https://wiki.osgeo.org/wiki/OSGeo_Code_Sprint_2018).

==== OSGeo Incubation Process ====

Check the current status of the OSGeo incubation process and work on the next steps.

==== Merge prototype-v0 branch with trunk ====

For a production server, it is now recommended to use the prototype-v0 branch that was initially used for the GeSUD project to add the HPC (High Performance Computing) support. It is time to merge the branch with trunk and make trunk the most advanced version of the ZOO-Project, which is not the case anymore. The improvements made in this branch should be properly documented.

==== Documentation ====

Publish the workshop materials used during previous FOSS4G on github as approved by the PSC's vote some times ago. Make the workshop material available on github-pages and add the links on the official [http://zoo-project.org/new/Resources/Workshops# workshop list page].

Fix typo, if any, in the current documentation. Check if some sections should be split into smaller ones (for instance: [http://zoo-project.org/docs/services/howtos.html#general-information this section]) and verify that every language is properly covered.

==== Document msInclude and extend it to support Raster  ====

First of all, the msInclude keyword that can be added to the ZCFG file of a ZOO-Service, to produce heatmap based on point result set, has not been documented anywhere, for the simple reason that it is only supported in the prototype-v0 branch rather than directly in trunk. Also, we have received a request for supporting similar mechanisms for raster classification, by using a predefined layer in place of the classification that is automatically generated by the ZOO-Kernel.

==== Add support for R language ====

As Luca asked some times ago on [https://lists.osgeo.org/pipermail/zoo-discuss/2014-October/001171.html zoo-discuss], R may be supported as a programming language for implementing WPS Service. Some tests has been made to try to support R as a programming language for ZOO-Services that was conclusive. This code should be reviewed and committed to the SVN source tree. Some example Services can also be introduced (for instance the Voronoi triangulation). Add documentation for this newly supported language.

==== Add support for JSON ZCFG ====

With the HPC support, a new dependency has been introduced: libjson-c, this library is mainly used, by now, to create JSON object from the ZOO-Kernel to send the string representation of that object to the callback web services which deal with detailed history management. We can take advantages of the use of this library and the fact that it should have been merged in trunk during the code sprint, to add a support for ZCFG files containing a JSON definition of a service.

==== AppVeyor update ====

The [https://ci.appveyor.com/project/gfenoy/trunk-if9kv AppVeyor instance] that builds both ZOO-Project and MapMint for windows platform should be updated to the latest version before the release can be planned. We should make sure that we can be able to provide up-to-date packages or on-demand specific version for windows users.

==== Plan the 1.7.0 release ====

The plan for the  1.7.0 release should be provided by the end of the code sprint.



{{TracNotice|{{PAGENAME}}}}